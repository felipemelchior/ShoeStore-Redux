{"ast":null,"code":"import _defineProperty from \"/home/homdreen/Documents/Projetos/reduxreview/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/homdreen/Documents/Projetos/reduxreview/src/pages/Home/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { MdAddShoppingCart } from 'react-icons/md';\nimport * as CartActions from '../../store/modules/cart/actions';\nimport { formatPrice } from '../../util/format';\nimport api from '../../services/api';\nimport { ProductList } from './styles';\n\nclass Home extends Component {\n  constructor() {\n    super();\n\n    this.handleAddProduct = id => {\n      const addToCartRequest = this.props.addToCartRequest;\n      addToCartRequest(id);\n    };\n\n    this.state = {\n      products: []\n    };\n  }\n\n  async componentDidMount() {\n    const response = await api.get('/products');\n    const data = response.data.map(product => _objectSpread({}, product, {\n      priceFormatted: formatPrice(product.price)\n    }));\n    this.setState({\n      products: data\n    });\n  }\n\n  render() {\n    const products = this.state.products;\n    const amount = this.props.amount;\n    return React.createElement(ProductList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, products.map(product => React.createElement(\"li\", {\n      key: product.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: product.image,\n      alt: product.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, product.title), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, product.priceFormatted), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.handleAddProduct(product.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(MdAddShoppingCart, {\n      size: 16,\n      color: \"#FFF\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), ' ', amount[product.id] || 0), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"ADICIONAR AO CARRINHO\")))));\n  }\n\n}\n\nHome.propTypes = {\n  dispatch: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  amount: state.cart.reduce((amount, product) => {\n    amount[product.id] = product.amount;\n    return amount;\n  }, {})\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators(CartActions, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["/home/homdreen/Documents/Projetos/reduxreview/src/pages/Home/index.js"],"names":["React","Component","bindActionCreators","connect","PropTypes","MdAddShoppingCart","CartActions","formatPrice","api","ProductList","Home","constructor","handleAddProduct","id","addToCartRequest","props","state","products","componentDidMount","response","get","data","map","product","priceFormatted","price","setState","render","amount","image","title","propTypes","dispatch","func","mapStateToProps","cart","reduce","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { MdAddShoppingCart } from 'react-icons/md';\n\nimport * as CartActions from '../../store/modules/cart/actions';\nimport { formatPrice } from '../../util/format';\nimport api from '../../services/api';\nimport { ProductList } from './styles';\n\nclass Home extends Component {\n  static propTypes = {\n    dispatch: PropTypes.func,\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      products: [],\n    };\n  }\n\n  async componentDidMount() {\n    const response = await api.get('/products');\n\n    const data = response.data.map(product => ({\n      ...product,\n      priceFormatted: formatPrice(product.price),\n    }));\n\n    this.setState({ products: data });\n  }\n\n  handleAddProduct = id => {\n    const { addToCartRequest } = this.props;\n\n    addToCartRequest(id);\n  };\n\n  render() {\n    const { products } = this.state;\n    const { amount } = this.props;\n    return (\n      <ProductList>\n        {products.map(product => (\n          <li key={product.id}>\n            <img src={product.image} alt={product.title} />\n            <strong>{product.title}</strong>\n            <span>{product.priceFormatted}</span>\n\n            <button\n              type=\"button\"\n              onClick={() => this.handleAddProduct(product.id)}\n            >\n              <div>\n                <MdAddShoppingCart size={16} color=\"#FFF\" />{' '}\n                {amount[product.id] || 0}\n              </div>\n\n              <span>ADICIONAR AO CARRINHO</span>\n            </button>\n          </li>\n        ))}\n      </ProductList>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  amount: state.cart.reduce((amount, product) => {\n    amount[product.id] = product.amount;\n\n    return amount;\n  }, {}),\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(CartActions, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Home);\n"]},"metadata":{},"sourceType":"module"}